// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PyImpresoras.Persistencia;

#nullable disable

namespace PyImpresoras.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    partial class AppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PyImpresoras.Dominio.Asignacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AuxiliarId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuxiliarId");

                    b.ToTable("Asignaciones");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.AsignacionImpresora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AsignacionId")
                        .HasColumnType("int");

                    b.Property<int>("ImpresoraId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AsignacionId");

                    b.HasIndex("ImpresoraId");

                    b.ToTable("AsignacionesImpresoras");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.AsignacionOperador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AsignacionId")
                        .HasColumnType("int");

                    b.Property<int>("OperadorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AsignacionId");

                    b.HasIndex("OperadorId");

                    b.ToTable("AsignacionesOperadores");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.AsignacionTecnico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AsignacionId")
                        .HasColumnType("int");

                    b.Property<int>("TecnicoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AsignacionId");

                    b.HasIndex("TecnicoId");

                    b.ToTable("AsignacionesTecnicos");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.HistorialRevision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int?>("JefeOperacionId")
                        .HasColumnType("int");

                    b.Property<int>("RevisionId")
                        .HasColumnType("int");

                    b.Property<int>("Valor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JefeOperacionId");

                    b.HasIndex("RevisionId");

                    b.ToTable("HistorialRevisiones");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.Impresora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Anio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AuxiliarId")
                        .HasColumnType("int");

                    b.Property<int?>("JefeOperacionId")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaisOrigen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlacaImpresora")
                        .HasColumnType("int");

                    b.Property<int>("SeguroId")
                        .HasColumnType("int");

                    b.Property<double>("VelocidadImpresion")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AuxiliarId");

                    b.HasIndex("JefeOperacionId");

                    b.HasIndex("SeguroId");

                    b.ToTable("Impresoras");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroTelefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.Revision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Alineacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoCabezal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoExtrusor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("ImpresoraId")
                        .HasColumnType("int");

                    b.Property<string>("Voltaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ImpresoraId");

                    b.ToTable("Revisiones");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.Seguro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("JefeOperacionId")
                        .HasColumnType("int");

                    b.Property<int?>("OperadorId")
                        .HasColumnType("int");

                    b.Property<int?>("SocioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JefeOperacionId");

                    b.HasIndex("OperadorId");

                    b.HasIndex("SocioId");

                    b.ToTable("Seguros");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.TipoEstudio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("TecnicoId")
                        .HasColumnType("int");

                    b.Property<string>("TipoDeEstudio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TecnicoId");

                    b.ToTable("TiposEstudios");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.TipoImpresora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ImpresoraId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ImpresoraId");

                    b.ToTable("TiposImpresoras");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.TipoRevision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("RevisionId")
                        .HasColumnType("int");

                    b.Property<string>("TipoDeRevision")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RevisionId");

                    b.ToTable("TipoRevisiones");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.TipoSeguro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("SeguroId")
                        .HasColumnType("int");

                    b.Property<string>("TipoDeSeguro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SeguroId");

                    b.ToTable("TiposSeguros");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.Auxiliar", b =>
                {
                    b.HasBaseType("PyImpresoras.Dominio.Persona");

                    b.HasDiscriminator().HasValue("Auxiliar");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.JefeOperacion", b =>
                {
                    b.HasBaseType("PyImpresoras.Dominio.Persona");

                    b.HasDiscriminator().HasValue("JefeOperacion");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.Operador", b =>
                {
                    b.HasBaseType("PyImpresoras.Dominio.Persona");

                    b.Property<int?>("AuxiliarId")
                        .HasColumnType("int");

                    b.HasIndex("AuxiliarId");

                    b.HasDiscriminator().HasValue("Operador");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.Socio", b =>
                {
                    b.HasBaseType("PyImpresoras.Dominio.Persona");

                    b.Property<int?>("AuxiliarId")
                        .HasColumnType("int")
                        .HasColumnName("Socio_AuxiliarId");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("AuxiliarId");

                    b.HasDiscriminator().HasValue("Socio");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.Tecnico", b =>
                {
                    b.HasBaseType("PyImpresoras.Dominio.Persona");

                    b.Property<int?>("AuxiliarId")
                        .HasColumnType("int")
                        .HasColumnName("Tecnico_AuxiliarId");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("AuxiliarId");

                    b.HasDiscriminator().HasValue("Tecnico");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.Asignacion", b =>
                {
                    b.HasOne("PyImpresoras.Dominio.Auxiliar", null)
                        .WithMany("ListaAsignaciones")
                        .HasForeignKey("AuxiliarId");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.AsignacionImpresora", b =>
                {
                    b.HasOne("PyImpresoras.Dominio.Asignacion", "Asignacion")
                        .WithMany("AsignacionesImpresoras")
                        .HasForeignKey("AsignacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PyImpresoras.Dominio.Impresora", "Impresora")
                        .WithMany("AsignacionesImpresoras")
                        .HasForeignKey("ImpresoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asignacion");

                    b.Navigation("Impresora");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.AsignacionOperador", b =>
                {
                    b.HasOne("PyImpresoras.Dominio.Asignacion", "Asignacion")
                        .WithMany("AsignacionesOperadores")
                        .HasForeignKey("AsignacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PyImpresoras.Dominio.Operador", "Operador")
                        .WithMany("AsignacionesOperadores")
                        .HasForeignKey("OperadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asignacion");

                    b.Navigation("Operador");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.AsignacionTecnico", b =>
                {
                    b.HasOne("PyImpresoras.Dominio.Asignacion", "Asignacion")
                        .WithMany("AsignacionesTecnicos")
                        .HasForeignKey("AsignacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PyImpresoras.Dominio.Tecnico", "Tecnico")
                        .WithMany("AsignacionesTecnicos")
                        .HasForeignKey("TecnicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asignacion");

                    b.Navigation("Tecnico");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.HistorialRevision", b =>
                {
                    b.HasOne("PyImpresoras.Dominio.JefeOperacion", null)
                        .WithMany("HistorialRevisiones")
                        .HasForeignKey("JefeOperacionId");

                    b.HasOne("PyImpresoras.Dominio.Revision", "Revision")
                        .WithMany()
                        .HasForeignKey("RevisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Revision");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.Impresora", b =>
                {
                    b.HasOne("PyImpresoras.Dominio.Auxiliar", null)
                        .WithMany("ListaImpresoras")
                        .HasForeignKey("AuxiliarId");

                    b.HasOne("PyImpresoras.Dominio.JefeOperacion", null)
                        .WithMany("ListaImpresoras")
                        .HasForeignKey("JefeOperacionId");

                    b.HasOne("PyImpresoras.Dominio.Seguro", "Seguro")
                        .WithMany()
                        .HasForeignKey("SeguroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seguro");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.Revision", b =>
                {
                    b.HasOne("PyImpresoras.Dominio.Impresora", "Impresora")
                        .WithMany()
                        .HasForeignKey("ImpresoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Impresora");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.Seguro", b =>
                {
                    b.HasOne("PyImpresoras.Dominio.JefeOperacion", null)
                        .WithMany("ListaSeguros")
                        .HasForeignKey("JefeOperacionId");

                    b.HasOne("PyImpresoras.Dominio.Operador", null)
                        .WithMany("ListaSeguros")
                        .HasForeignKey("OperadorId");

                    b.HasOne("PyImpresoras.Dominio.Socio", null)
                        .WithMany("ListaSeguros")
                        .HasForeignKey("SocioId");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.TipoEstudio", b =>
                {
                    b.HasOne("PyImpresoras.Dominio.Tecnico", null)
                        .WithMany("ListaTipoEstudio")
                        .HasForeignKey("TecnicoId");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.TipoImpresora", b =>
                {
                    b.HasOne("PyImpresoras.Dominio.Impresora", null)
                        .WithMany("TipoImpresoras")
                        .HasForeignKey("ImpresoraId");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.TipoRevision", b =>
                {
                    b.HasOne("PyImpresoras.Dominio.Revision", null)
                        .WithMany("TipoRevision")
                        .HasForeignKey("RevisionId");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.TipoSeguro", b =>
                {
                    b.HasOne("PyImpresoras.Dominio.Seguro", null)
                        .WithMany("ListaTipoSeguro")
                        .HasForeignKey("SeguroId");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.Operador", b =>
                {
                    b.HasOne("PyImpresoras.Dominio.Auxiliar", null)
                        .WithMany("ListaOperadores")
                        .HasForeignKey("AuxiliarId");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.Socio", b =>
                {
                    b.HasOne("PyImpresoras.Dominio.Auxiliar", null)
                        .WithMany("ListaSocios")
                        .HasForeignKey("AuxiliarId");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.Tecnico", b =>
                {
                    b.HasOne("PyImpresoras.Dominio.Auxiliar", null)
                        .WithMany("ListaTecnicos")
                        .HasForeignKey("AuxiliarId");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.Asignacion", b =>
                {
                    b.Navigation("AsignacionesImpresoras");

                    b.Navigation("AsignacionesOperadores");

                    b.Navigation("AsignacionesTecnicos");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.Impresora", b =>
                {
                    b.Navigation("AsignacionesImpresoras");

                    b.Navigation("TipoImpresoras");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.Revision", b =>
                {
                    b.Navigation("TipoRevision");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.Seguro", b =>
                {
                    b.Navigation("ListaTipoSeguro");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.Auxiliar", b =>
                {
                    b.Navigation("ListaAsignaciones");

                    b.Navigation("ListaImpresoras");

                    b.Navigation("ListaOperadores");

                    b.Navigation("ListaSocios");

                    b.Navigation("ListaTecnicos");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.JefeOperacion", b =>
                {
                    b.Navigation("HistorialRevisiones");

                    b.Navigation("ListaImpresoras");

                    b.Navigation("ListaSeguros");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.Operador", b =>
                {
                    b.Navigation("AsignacionesOperadores");

                    b.Navigation("ListaSeguros");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.Socio", b =>
                {
                    b.Navigation("ListaSeguros");
                });

            modelBuilder.Entity("PyImpresoras.Dominio.Tecnico", b =>
                {
                    b.Navigation("AsignacionesTecnicos");

                    b.Navigation("ListaTipoEstudio");
                });
#pragma warning restore 612, 618
        }
    }
}
